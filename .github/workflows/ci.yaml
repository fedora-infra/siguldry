name: CI
permissions:
  contents: read
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "30 0 * * SUN"

jobs:
  audit:
    name: Cargo dependency checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@stable
        id: rust-toolchain

      - uses: Swatinem/rust-cache@v2

      - name: Install cargo-deny
        run: |
          cargo install --locked cargo-deny

      - name: Check for security advisories
        run: cargo deny --log-level info --workspace check --show-stats advisories

      - name: Check for unexpected licenses from dependencies
        run: cargo deny --log-level info --workspace check --show-stats licenses

      - name: Check crates are from expected sources
        run: cargo deny --log-level info --workspace check --show-stats sources

  zizmor:
    name: GitHub Actions lints
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5

      - name: Run zizmor ðŸŒˆ
        run: uvx zizmor .

  test:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Support current stable and the toolchain that ships with
        # the latest RHEL 9 minor release. 9.5 targets 1.79, and
        # 9.6 targets 1.84
        #
        # https://issues.redhat.com/browse/RHEL-30070
        # https://issues.redhat.com/browse/RHEL-61964
        rust-toolchain: [stable, "1.79"]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@stable
        id: rust-toolchain
        with:
          toolchain: ${{matrix.rust-toolchain}}
          components: clippy, rustfmt

      - uses: Swatinem/rust-cache@v2

      - name: Install test packages
        run: |
          sudo apt update
          sudo apt install pesign libssl-dev

          # pesign-client doesn't let you configure the socket location, so make it available to the world
          sudo mkdir -p /run/pesign/
          sudo chmod -R 777 /run/pesign/

      - name: cargo fmt
        run: cargo fmt --all --check

      - name: cargo build
        run: cargo build

      - name: cargo clippy
        run: cargo clippy --all-targets --all-features -- --deny warnings

      - name: Run unit tests
        run: cargo test --all-features --workspace --no-fail-fast --bins --examples --benches

      - name: Check manual is up-to-date
        run: cargo xtask manual && test -z "$(git status --porcelain)"

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    container: quay.io/jeremycline/sigul-pesign-bridge-ci:latest
    services:
      sigul-bridge:
        image: quay.io/jeremycline/sigul-pesign-bridge-ci:latest
        env:
          RUN_SIGUL_BRIDGE: true
        volumes:
          - ./devel/github:/etc/sigul

      sigul-server:
        image: quay.io/jeremycline/sigul-pesign-bridge-ci:latest
        env:
          RUN_SIGUL_SERVER: true
        volumes:
          - ./devel/github:/etc/sigul

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Integration tests
        run: |
          set -xeuo pipefail

          # The sample UEFI application is baked into the image.
          cp -r /srv/siguldry/target .
          mkdir -p /run/pesign/
          export RUNTIME_DIRECTORY=/run/pesign
          export CREDENTIALS_DIRECTORY=/srv/siguldry/creds/
          export SIGUL_PESIGN_BRIDGE_CONFIG=$(pwd)/devel/github/config.toml
          cargo test --all-features --workspace -- --nocapture
